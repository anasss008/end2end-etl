version: '3'

networks:
  sofanet:

services:
  webserver:
      container_name: webserver
      image: apache/airflow:slim-latest-python3.11
      entrypoint: ['/opt/airflow/script/entrypoint.sh']
      command: webserver
      depends_on:
        - postgres
      restart: on-failure
      env_file: .env
      environment:
        - LOAD_EX=n
        - EXECUTOR=LocalExecutor
      logging:
        options:
          max-size: 10m
          max-file: "3"
      volumes:
        - ./dags:/opt/airflow/dags
        - ./scripts/entrypoint.sh:/opt/airflow/script/entrypoint.sh
        - ./credentials/:/opt/airflow/credentials/
        - ./requirements.txt:/opt/airflow/requirements.txt
        - ./logs/:/opt/airflow/logs
        - ./proxies/valid_proxies.txt:/opt/airflow/proxies/valid_proxies.txt
        - ./dbt/sofascore/profiles.yml:/opt/airflow/profiles.yml
        - ./dbt/sofascore/models:/opt/airflow/models
        - ./dbt/sofascore/macros:/opt/airflow/macros
        - ./dbt/sofascore/dbt_project.yml:/opt/airflow/dbt_project.yml
      ports:
        - "8080:8080"
      networks:
        - sofanet

  scheduler:
      container_name: scheduler
      image: apache/airflow:slim-latest-python3.11
      depends_on:
        - webserver
        - postgres
      restart: on-failure
      volumes:
        - ./dags:/opt/airflow/dags
        - ./scripts/entrypoint.sh:/opt/airflow/script/entrypoint.sh
        - ./credentials/:/opt/airflow/credentials/
        - ./requirements.txt:/opt/airflow/requirements.txt
        - ./logs/:/opt/airflow/logs
        - ./proxies/valid_proxies.txt:/opt/airflow/proxies/valid_proxies.txt
        - ./dbt/sofascore/profiles.yml:/opt/airflow/profiles.yml
        - ./dbt/sofascore/models:/opt/airflow/models
        - ./dbt/sofascore/macros:/opt/airflow/macros
        - ./dbt/sofascore/dbt_project.yml:/opt/airflow/dbt_project.yml
      env_file: .env
      environment:
        - LOAD_EX=n
        - EXECUTOR=LocalExecutor
      entrypoint: ['/opt/airflow/script/entrypoint.sh']
      
      command: scheduler
      networks:
        - sofanet

  postgres:
      image: postgres:14.10-bullseye
      container_name: postgres
      environment:
        - POSTGRES_USER=airflow
        - POSTGRES_PASSWORD=airflow
        - POSTGRES_DB=airflow
      volumes:
        - ./postgres-data:/var/lib/postgresql/data
      logging:
        options:
          max-size: 11m
          max-file: "3"
      networks:
        - sofanet

  superset:
    build:
      context: .
      dockerfile: apache_superset/Dockerfile
    container_name: superset
    networks:
      - sofanet
    env_file:
      - .env
    volumes:
      - ./credentials/:/app/credentials/
    ports:
      - '8088:8088'
    depends_on:
      - postgres